# Generated by Django 4.2 on 2024-06-28 09:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
        ('general_service', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('per_cent', models.PositiveIntegerField(default=0)),
                ('text', models.CharField(max_length=1000)),
                ('status', models.CharField(choices=[('order', 'Заказ'), ('balance', 'Пополнение баланса'), ('feedback', 'Отзыв'), ('motivation', 'Мотивация'), ('kpi', 'KPI'), ('birthday', 'День рождения'), ('recommendation', 'Рекомендация')], max_length=20)),
                ('obj_status', models.CharField(blank=True, choices=[('created', 'created'), ('paid', 'paid'), ('sent', 'sent'), ('wait', 'wait'), ('rejected', 'rejected'), ('success', 'success')], max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CityProductToBuy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general_service.city')),
            ],
        ),
        migrations.CreateModel(
            name='CRMTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('created', 'created'), ('completed', 'completed'), ('not_completed', 'not_completed'), ('expired', 'expired'), ('repeat', 'repeat'), ('waiting', 'waiting')], default='created', max_length=20)),
                ('title', models.CharField(max_length=300)),
                ('text', models.TextField(blank=True, null=True)),
                ('response_text', models.TextField(blank=True, null=True)),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
                ('executors', models.ManyToManyField(related_name='my_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DealerKPIPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spend_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('target_month', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dealer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpi_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('dealer', 'target_month')},
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('new', 'new'), ('moderated', 'moderated'), ('rejected', 'rejected')], default='new', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('uid', models.CharField(default='00000000-0000-0000-0000-000000000000', max_length=50)),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiver_inventories', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender_inventories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'product'), (2, 'category'), (3, 'money')])),
                ('is_active', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_kpis', to=settings.AUTH_USER_MODEL)),
                ('executor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executor_kpis', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ProductToBuy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_to_buy', to='crm_general.dealerkpiplan')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpi_plans', to='product.asiaproduct')),
            ],
        ),
        migrations.CreateModel(
            name='ProductRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=0)),
                ('notification_created', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='product.asiaproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_recommendations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KPIItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.IntegerField(choices=[(1, 'count'), (2, 'money')])),
                ('amount', models.IntegerField()),
                ('categories', models.ManyToManyField(related_name='kpi_items', to='product.category')),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpi_items', to='crm_general.kpi')),
                ('products', models.ManyToManyField(related_name='kpi_items', to='product.asiaproduct')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=0)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='crm_general.inventory')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_products', to='product.asiaproduct')),
            ],
        ),
        migrations.CreateModel(
            name='DealerKPIPlanStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('done_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('kpi_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='crm_general.dealerkpiplan')),
            ],
        ),
        migrations.CreateModel(
            name='CRMTaskFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='tasks')),
                ('is_response', models.BooleanField(default=False)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='crm_general.crmtask')),
            ],
        ),
        migrations.CreateModel(
            name='CityProductToBuyStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('done_count', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('city_product_to_buy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='crm_general.cityproducttobuy')),
            ],
        ),
        migrations.AddField(
            model_name='cityproducttobuy',
            name='product_to_buy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='count_for_cities', to='crm_general.producttobuy'),
        ),
    ]
